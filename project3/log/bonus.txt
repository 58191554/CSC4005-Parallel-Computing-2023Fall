Merge Sort OpenMP (Optimized with -O2)
Number of cores: 1
Merge Sort Complete!
Execution Time: 12109 milliseconds
std::sort Time: 12122 milliseconds
Pass the sorting result check!
Number of cores: 2
Merge Sort Complete!
Execution Time: 6697 milliseconds
Merge Sort Complete!
Execution Time: 6706 milliseconds
std::sort Time: 12116 milliseconds
std::sort Time: 12141 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Number of cores: 4
Merge Sort Complete!
Execution Time: 3913 milliseconds
Merge Sort Complete!
Execution Time: 4168 milliseconds
Merge Sort Complete!
Execution Time: 4387 milliseconds
Merge Sort Complete!
Execution Time: 4681 milliseconds
std::sort Time: 12160 milliseconds
Fail to pass the sorting result check!
4th element of the sorted vector is expected to be 4
But your 4th element is 5
std::sort Time: 12193 milliseconds
Fail to pass the sorting result check!
4th element of the sorted vector is expected to be 4
But your 4th element is 5
std::sort Time: 12127 milliseconds
Fail to pass the sorting result check!
4th element of the sorted vector is expected to be 4
But your 4th element is 5
std::sort Time: 12129 milliseconds
Fail to pass the sorting result check!
4th element of the sorted vector is expected to be 4
But your 4th element is 5
Number of cores: 8
Merge Sort Complete!
Execution Time: 4281 milliseconds
Merge Sort Complete!
Execution Time: 4966 milliseconds
Merge Sort Complete!
Execution Time: 5067 milliseconds
Merge Sort Complete!
Execution Time: 5268 milliseconds
Merge Sort Complete!
Execution Time: 5312 milliseconds
Merge Sort Complete!
Execution Time: 5347 milliseconds
Merge Sort Complete!
Execution Time: 5410 milliseconds
Merge Sort Complete!
Execution Time: 5402 milliseconds
std::sort Time: 12173 milliseconds
Fail to pass the sorting result check!
1th element of the sorted vector is expected to be 1
But your 1th element is 2
std::sort Time: 12220 milliseconds
Fail to pass the sorting result check!
1th element of the sorted vector is expected to be 1
But your 1th element is 2
std::sort Time: 12160 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 4
std::sort Time: 12176 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 4
std::sort Time: 12148 milliseconds
Fail to pass the sorting result check!
1th element of the sorted vector is expected to be 1
But your 1th element is 4
std::sort Time: 12137 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 4
std::sort Time: 12132 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 4
std::sort Time: 12206 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
Number of cores: 16
Merge Sort Complete!
Execution Time: 9176 milliseconds
Merge Sort Complete!
Execution Time: 9272 milliseconds
Merge Sort Complete!
Execution Time: 9287 milliseconds
Merge Sort Complete!
Execution Time: 9292 milliseconds
Merge Sort Complete!
Execution Time: 9299 milliseconds
Merge Sort Complete!
Execution Time: 9304 milliseconds
Merge Sort Complete!
Execution Time: 9823 milliseconds
Merge Sort Complete!
Execution Time: 9844 milliseconds
Merge Sort Complete!
Execution Time: 9892 milliseconds
Merge Sort Complete!
Execution Time: 9948 milliseconds
Merge Sort Complete!
Execution Time: 9991 milliseconds
Merge Sort Complete!
Execution Time: 10085 milliseconds
Merge Sort Complete!
Execution Time: 10117 milliseconds
Merge Sort Complete!
Execution Time: 10107 milliseconds
Merge Sort Complete!
Execution Time: 10112 milliseconds
Merge Sort Complete!
Execution Time: 10106 milliseconds
std::sort Time: 12155 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
std::sort Time: 12141 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12146 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
std::sort Time: 12147 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12148 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12151 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12158 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
std::sort Time: 12171 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12153 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
std::sort Time: 12160 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12169 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12163 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
std::sort Time: 12185 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12183 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12187 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 6
std::sort Time: 12214 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 5
Number of cores: 32
Merge Sort Complete!
Execution Time: 17972 milliseconds
Merge Sort Complete!
Execution Time: 18008 milliseconds
Merge Sort Complete!
Execution Time: 18036 milliseconds
Merge Sort Complete!
Execution Time: 18173 milliseconds
Merge Sort Complete!
Execution Time: 18183 milliseconds
Merge Sort Complete!
Execution Time: 18226 milliseconds
Merge Sort Complete!
Execution Time: 18302 milliseconds
Merge Sort Complete!
Execution Time: 18337 milliseconds
Merge Sort Complete!
Execution Time: 18355 milliseconds
Merge Sort Complete!
Execution Time: 18379 milliseconds
Merge Sort Complete!
Execution Time: 18380 milliseconds
Merge Sort Complete!
Execution Time: 18398 milliseconds
Merge Sort Complete!
Execution Time: 19754 milliseconds
Merge Sort Complete!
Execution Time: 19959 milliseconds
Merge Sort Complete!
Execution Time: 20033 milliseconds
Merge Sort Complete!
Execution Time: 20063 milliseconds
Merge Sort Complete!
Execution Time: 20123 milliseconds
Merge Sort Complete!
Execution Time: 20150 milliseconds
Merge Sort Complete!
Execution Time: 20159 milliseconds
Merge Sort Complete!
Execution Time: 20188 milliseconds
Merge Sort Complete!
Execution Time: 20256 milliseconds
Merge Sort Complete!
Execution Time: 20238 milliseconds
Merge Sort Complete!
Execution Time: 20342 milliseconds
Merge Sort Complete!
Execution Time: 20311 milliseconds
Merge Sort Complete!
Execution Time: 20346 milliseconds
Merge Sort Complete!
Execution Time: 20340 milliseconds
Merge Sort Complete!
Execution Time: 20379 milliseconds
Merge Sort Complete!
Execution Time: 20396 milliseconds
Merge Sort Complete!
Execution Time: 20354 milliseconds
Merge Sort Complete!
Execution Time: 20489 milliseconds
Merge Sort Complete!
Execution Time: 20520 milliseconds
Merge Sort Complete!
Execution Time: 20479 milliseconds
std::sort Time: 16243 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16246 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16249 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16309 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16294 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16290 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16261 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16258 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16257 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16324 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16325 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16326 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16249 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16246 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16353 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16274 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16310 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16252 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16279 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16262 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16306 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16345 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16297 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16296 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16340 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16339 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16277 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16332 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16356 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16362 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16430 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17
std::sort Time: 16414 milliseconds
Fail to pass the sorting result check!
0th element of the sorted vector is expected to be 1
But your 0th element is 17

Quick Sort OpenMP (Optimized with -O2)
Number of cores: 1
Quick Sort Complete!
Execution Time: 12642 milliseconds
std::sort Time: 11841 milliseconds
Pass the sorting result check!
Number of cores: 2
Quick Sort Complete!
Execution Time: 18015 milliseconds
Quick Sort Complete!
Execution Time: 18052 milliseconds
std::sort Time: 15584 milliseconds
std::sort Time: 15668 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Number of cores: 4
Quick Sort Complete!
Execution Time: 18043 milliseconds
Quick Sort Complete!
Execution Time: 18040 milliseconds
Quick Sort Complete!
Execution Time: 18049 milliseconds
Quick Sort Complete!
Execution Time: 18079 milliseconds
std::sort Time: 15516 milliseconds
std::sort Time: 15540 milliseconds
std::sort Time: 15589 milliseconds
std::sort Time: 15628 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Number of cores: 8
Quick Sort Complete!
Execution Time: 18150 milliseconds
Quick Sort Complete!
Execution Time: 18144 milliseconds
Quick Sort Complete!
Execution Time: 18207 milliseconds
Quick Sort Complete!
Execution Time: 18208 milliseconds
Quick Sort Complete!
Execution Time: 18244 milliseconds
Quick Sort Complete!
Execution Time: 18243 milliseconds
Quick Sort Complete!
Execution Time: 18300 milliseconds
Quick Sort Complete!
Execution Time: 18300 milliseconds
std::sort Time: 15455 milliseconds
std::sort Time: 15481 milliseconds
std::sort Time: 15474 milliseconds
std::sort Time: 15474 milliseconds
std::sort Time: 15526 milliseconds
std::sort Time: 15540 milliseconds
Pass the sorting result check!
std::sort Time: 15541 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
std::sort Time: 15583 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Number of cores: 16
Quick Sort Complete!
Execution Time: 18036 milliseconds
Quick Sort Complete!
Execution Time: 18046 milliseconds
Quick Sort Complete!
Execution Time: 18072 milliseconds
Quick Sort Complete!
Execution Time: 18072 milliseconds
Quick Sort Complete!
Execution Time: 18059 milliseconds
Quick Sort Complete!
Execution Time: 18069 milliseconds
Quick Sort Complete!
Execution Time: 18082 milliseconds
Quick Sort Complete!
Execution Time: 18079 milliseconds
Quick Sort Complete!
Execution Time: 18162 milliseconds
Quick Sort Complete!
Execution Time: 18162 milliseconds
Quick Sort Complete!
Execution Time: 18287 milliseconds
Quick Sort Complete!
Execution Time: 18286 milliseconds
Quick Sort Complete!
Execution Time: 18308 milliseconds
Quick Sort Complete!
Execution Time: 18307 milliseconds
Quick Sort Complete!
Execution Time: 18274 milliseconds
Quick Sort Complete!
Execution Time: 18272 milliseconds
std::sort Time: 15488 milliseconds
std::sort Time: 15488 milliseconds
std::sort Time: 15595 milliseconds
std::sort Time: 15630 milliseconds
std::sort Time: 15480 milliseconds
std::sort Time: 15480 milliseconds
std::sort Time: 15570 milliseconds
std::sort Time: 15605 milliseconds
std::sort Time: 15595 milliseconds
std::sort Time: 15637 milliseconds
Pass the sorting result check!
Pass the sorting result check!
std::sort Time: 15489 milliseconds
std::sort Time: 15489 milliseconds
std::sort Time: 15490 milliseconds
std::sort Time: 15490 milliseconds
std::sort Time: 15496 milliseconds
std::sort Time: 15496 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Number of cores: 32
Quick Sort Complete!
Execution Time: 18056 milliseconds
Quick Sort Complete!
Execution Time: 18056 milliseconds
Quick Sort Complete!
Execution Time: 18212 milliseconds
Quick Sort Complete!
Execution Time: 18213 milliseconds
Quick Sort Complete!
Execution Time: 18280 milliseconds
Quick Sort Complete!
Execution Time: 18279 milliseconds
Quick Sort Complete!
Execution Time: 18299 milliseconds
Quick Sort Complete!
Execution Time: 18298 milliseconds
Quick Sort Complete!
Execution Time: 18357 milliseconds
Quick Sort Complete!
Execution Time: 18357 milliseconds
Quick Sort Complete!
Execution Time: 18342 milliseconds
Quick Sort Complete!
Execution Time: 18341 milliseconds
Quick Sort Complete!
Execution Time: 18283 milliseconds
Quick Sort Complete!
Execution Time: 18295 milliseconds
Quick Sort Complete!
Execution Time: 18291 milliseconds
Quick Sort Complete!
Execution Time: 18316 milliseconds
Quick Sort Complete!
Execution Time: 18349 milliseconds
Quick Sort Complete!
Execution Time: 18349 milliseconds
Quick Sort Complete!
Execution Time: 18327 milliseconds
Quick Sort Complete!
Execution Time: 18332 milliseconds
Quick Sort Complete!
Execution Time: 18329 milliseconds
Quick Sort Complete!
Execution Time: 18346 milliseconds
Quick Sort Complete!
Execution Time: 18351 milliseconds
Quick Sort Complete!
Execution Time: 18351 milliseconds
Quick Sort Complete!
Execution Time: 18387 milliseconds
Quick Sort Complete!
Execution Time: 18399 milliseconds
Quick Sort Complete!
Execution Time: 18408 milliseconds
Quick Sort Complete!
Execution Time: 18416 milliseconds
Quick Sort Complete!
Execution Time: 18421 milliseconds
Quick Sort Complete!
Execution Time: 18427 milliseconds
Quick Sort Complete!
Execution Time: 18463 milliseconds
Quick Sort Complete!
Execution Time: 18495 milliseconds
std::sort Time: 15527 milliseconds
std::sort Time: 15527 milliseconds
std::sort Time: 15382 milliseconds
std::sort Time: 15386 milliseconds
std::sort Time: 15504 milliseconds
std::sort Time: 15504 milliseconds
std::sort Time: 15383 milliseconds
std::sort Time: 15387 milliseconds
std::sort Time: 15474 milliseconds
std::sort Time: 15487 milliseconds
Pass the sorting result check!
Pass the sorting result check!
std::sort Time: 15505 milliseconds
std::sort Time: 15505 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
std::sort Time: 15459 milliseconds
std::sort Time: 15465 milliseconds
std::sort Time: 15658 milliseconds
std::sort Time: 15674 milliseconds
std::sort Time: 15701 milliseconds
Pass the sorting result check!
Pass the sorting result check!
std::sort Time: 15691 milliseconds
std::sort Time: 15674 milliseconds
std::sort Time: 15735 milliseconds
std::sort Time: 15701 milliseconds
std::sort Time: 15703 milliseconds
std::sort Time: 15687 milliseconds
std::sort Time: 15697 milliseconds
std::sort Time: 15694 milliseconds
Pass the sorting result check!
std::sort Time: 15686 milliseconds
std::sort Time: 15708 milliseconds
Pass the sorting result check!
std::sort Time: 15681 milliseconds
std::sort Time: 15693 milliseconds
std::sort Time: 15735 milliseconds
std::sort Time: 15719 milliseconds
Pass the sorting result check!
std::sort Time: 15720 milliseconds
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!
Pass the sorting result check!

